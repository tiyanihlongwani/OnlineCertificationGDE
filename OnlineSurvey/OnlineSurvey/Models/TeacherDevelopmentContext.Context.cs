//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineSurvey.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TeacherDevelopment1EntitiesV2 : DbContext
    {
        public TeacherDevelopment1EntitiesV2()
            : base("name=TeacherDevelopment1EntitiesV2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<ApprovalRoute> ApprovalRoutes { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Circuit> Circuits { get; set; }
        public virtual DbSet<CircuitPosition> CircuitPositions { get; set; }
        public virtual DbSet<Cluster> Clusters { get; set; }
        public virtual DbSet<ClusterPosition> ClusterPositions { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<DistrictPosition> DistrictPositions { get; set; }
        public virtual DbSet<Enroll> Enrolls { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<Experience> Experiences { get; set; }
        public virtual DbSet<Grade> Grades { get; set; }
        public virtual DbSet<GradeSubject> GradeSubjects { get; set; }
        public virtual DbSet<Level> Levels { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<Partner> Partners { get; set; }
        public virtual DbSet<PartnersPosition> PartnersPositions { get; set; }
        public virtual DbSet<Phase> Phases { get; set; }
        public virtual DbSet<PhaseSubject> PhaseSubjects { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<ProvincePosition> ProvincePositions { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<RegionPosition> RegionPositions { get; set; }
        public virtual DbSet<ResetPassword> ResetPasswords { get; set; }
        public virtual DbSet<School> Schools { get; set; }
        public virtual DbSet<SchoolPosition> SchoolPositions { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<SubjectProject> SubjectProjects { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tbl_Personal_Details> tbl_Personal_Details { get; set; }
        public virtual DbSet<TeacherPosition1> TeacherPosition1 { get; set; }
        public virtual DbSet<Trainee> Trainees { get; set; }
        public virtual DbSet<TraineeGradeSubject> TraineeGradeSubjects { get; set; }
        public virtual DbSet<Training> Trainings { get; set; }
        public virtual DbSet<TrainingSchedule> TrainingSchedules { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Venue> Venues { get; set; }
        public virtual DbSet<VenueSchedule> VenueSchedules { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Nationality> Nationalities { get; set; }
        public virtual DbSet<Race> Races { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> Insert_Trainee(string idNumber, Nullable<int> persalNumber, string name, string surname, string gender, Nullable<System.DateTime> dateOfBirth, Nullable<int> positionId, string aSPNETUserID)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var persalNumberParameter = persalNumber.HasValue ?
                new ObjectParameter("PersalNumber", persalNumber) :
                new ObjectParameter("PersalNumber", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var aSPNETUserIDParameter = aSPNETUserID != null ?
                new ObjectParameter("ASPNETUserID", aSPNETUserID) :
                new ObjectParameter("ASPNETUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Insert_Trainee", idNumberParameter, persalNumberParameter, nameParameter, surnameParameter, genderParameter, dateOfBirthParameter, positionIdParameter, aSPNETUserIDParameter);
        }
    
        public virtual int up_AddPrincipalAndDeputyToApprovalRoute()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_AddPrincipalAndDeputyToApprovalRoute");
        }
    
        public virtual ObjectResult<up_Address_ByTraineeId_Result> up_Address_ByTraineeId(string traineeId)
        {
            var traineeIdParameter = traineeId != null ?
                new ObjectParameter("TraineeId", traineeId) :
                new ObjectParameter("TraineeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Address_ByTraineeId_Result>("up_Address_ByTraineeId", traineeIdParameter);
        }
    
        public virtual int up_Address_Insert(string userName, string streetName, string suburbName, Nullable<short> postalCode, string postalAddress, string postalAddressNumber, string postalAddressSuburbName, Nullable<short> postalAddressCode, string houseNumber, string buildingName, ObjectParameter message)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var suburbNameParameter = suburbName != null ?
                new ObjectParameter("SuburbName", suburbName) :
                new ObjectParameter("SuburbName", typeof(string));
    
            var postalCodeParameter = postalCode.HasValue ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(short));
    
            var postalAddressParameter = postalAddress != null ?
                new ObjectParameter("PostalAddress", postalAddress) :
                new ObjectParameter("PostalAddress", typeof(string));
    
            var postalAddressNumberParameter = postalAddressNumber != null ?
                new ObjectParameter("PostalAddressNumber", postalAddressNumber) :
                new ObjectParameter("PostalAddressNumber", typeof(string));
    
            var postalAddressSuburbNameParameter = postalAddressSuburbName != null ?
                new ObjectParameter("PostalAddressSuburbName", postalAddressSuburbName) :
                new ObjectParameter("PostalAddressSuburbName", typeof(string));
    
            var postalAddressCodeParameter = postalAddressCode.HasValue ?
                new ObjectParameter("PostalAddressCode", postalAddressCode) :
                new ObjectParameter("PostalAddressCode", typeof(short));
    
            var houseNumberParameter = houseNumber != null ?
                new ObjectParameter("HouseNumber", houseNumber) :
                new ObjectParameter("HouseNumber", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Address_Insert", userNameParameter, streetNameParameter, suburbNameParameter, postalCodeParameter, postalAddressParameter, postalAddressNumberParameter, postalAddressSuburbNameParameter, postalAddressCodeParameter, houseNumberParameter, buildingNameParameter, message);
        }
    
        public virtual int up_Address_Update(string userName, string streetName, string suburbName, Nullable<short> postalCode, string postalAddress, string postalAddressNumber, string postalAddressSuburbName, Nullable<short> postalAddressCode, string houseNumber, string buildingName, ObjectParameter message)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var streetNameParameter = streetName != null ?
                new ObjectParameter("StreetName", streetName) :
                new ObjectParameter("StreetName", typeof(string));
    
            var suburbNameParameter = suburbName != null ?
                new ObjectParameter("SuburbName", suburbName) :
                new ObjectParameter("SuburbName", typeof(string));
    
            var postalCodeParameter = postalCode.HasValue ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(short));
    
            var postalAddressParameter = postalAddress != null ?
                new ObjectParameter("PostalAddress", postalAddress) :
                new ObjectParameter("PostalAddress", typeof(string));
    
            var postalAddressNumberParameter = postalAddressNumber != null ?
                new ObjectParameter("PostalAddressNumber", postalAddressNumber) :
                new ObjectParameter("PostalAddressNumber", typeof(string));
    
            var postalAddressSuburbNameParameter = postalAddressSuburbName != null ?
                new ObjectParameter("PostalAddressSuburbName", postalAddressSuburbName) :
                new ObjectParameter("PostalAddressSuburbName", typeof(string));
    
            var postalAddressCodeParameter = postalAddressCode.HasValue ?
                new ObjectParameter("PostalAddressCode", postalAddressCode) :
                new ObjectParameter("PostalAddressCode", typeof(short));
    
            var houseNumberParameter = houseNumber != null ?
                new ObjectParameter("HouseNumber", houseNumber) :
                new ObjectParameter("HouseNumber", typeof(string));
    
            var buildingNameParameter = buildingName != null ?
                new ObjectParameter("BuildingName", buildingName) :
                new ObjectParameter("BuildingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Address_Update", userNameParameter, streetNameParameter, suburbNameParameter, postalCodeParameter, postalAddressParameter, postalAddressNumberParameter, postalAddressSuburbNameParameter, postalAddressCodeParameter, houseNumberParameter, buildingNameParameter, message);
        }
    
        public virtual ObjectResult<up_AttendanceRegister_ById_Result> up_AttendanceRegister_ById(Nullable<int> scheduleId)
        {
            var scheduleIdParameter = scheduleId.HasValue ?
                new ObjectParameter("ScheduleId", scheduleId) :
                new ObjectParameter("ScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_AttendanceRegister_ById_Result>("up_AttendanceRegister_ById", scheduleIdParameter);
        }
    
        public virtual int up_CheckIn_UpdateById(Nullable<int> id, Nullable<short> checkIn, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var checkInParameter = checkIn.HasValue ?
                new ObjectParameter("CheckIn", checkIn) :
                new ObjectParameter("CheckIn", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_CheckIn_UpdateById", idParameter, checkInParameter, message);
        }
    
        public virtual int up_CheckOut_UpdateById(Nullable<int> id, Nullable<short> checkOut, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var checkOutParameter = checkOut.HasValue ?
                new ObjectParameter("CheckOut", checkOut) :
                new ObjectParameter("CheckOut", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_CheckOut_UpdateById", idParameter, checkOutParameter, message);
        }
    
        public virtual ObjectResult<up_Count_Phases_Result> up_Count_Phases(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Count_Phases_Result>("up_Count_Phases", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> up_Count_Project(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("up_Count_Project", nameParameter);
        }
    
        public virtual int up_Count_Users()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Count_Users");
        }
    
        public virtual ObjectResult<up_Enroll_ById_Result> up_Enroll_ById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Enroll_ById_Result>("up_Enroll_ById", idParameter);
        }
    
        public virtual int up_Enroll_Insert(Nullable<int> id, string userId, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Enroll_Insert", idParameter, userIdParameter, message);
        }
    
        public virtual ObjectResult<up_Experience_ById_Result> up_Experience_ById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Experience_ById_Result>("up_Experience_ById", idParameter);
        }
    
        public virtual ObjectResult<up_Experience_ByTraineeId_Result> up_Experience_ByTraineeId(Nullable<int> traineeId)
        {
            var traineeIdParameter = traineeId.HasValue ?
                new ObjectParameter("TraineeId", traineeId) :
                new ObjectParameter("TraineeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Experience_ByTraineeId_Result>("up_Experience_ByTraineeId", traineeIdParameter);
        }
    
        public virtual int up_Experience_Delete(Nullable<int> id, string username, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Experience_Delete", idParameter, usernameParameter, message);
        }
    
        public virtual int up_Experience_Insert(Nullable<int> traineeId, string companyName, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string currentPosition, string educationSector, string username, ObjectParameter message)
        {
            var traineeIdParameter = traineeId.HasValue ?
                new ObjectParameter("TraineeId", traineeId) :
                new ObjectParameter("TraineeId", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var currentPositionParameter = currentPosition != null ?
                new ObjectParameter("CurrentPosition", currentPosition) :
                new ObjectParameter("CurrentPosition", typeof(string));
    
            var educationSectorParameter = educationSector != null ?
                new ObjectParameter("EducationSector", educationSector) :
                new ObjectParameter("EducationSector", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Experience_Insert", traineeIdParameter, companyNameParameter, dateFromParameter, dateToParameter, currentPositionParameter, educationSectorParameter, usernameParameter, message);
        }
    
        public virtual int up_Experience_Update(Nullable<int> id, string companyName, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string currentPosition, string educationSector, string username, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var currentPositionParameter = currentPosition != null ?
                new ObjectParameter("CurrentPosition", currentPosition) :
                new ObjectParameter("CurrentPosition", typeof(string));
    
            var educationSectorParameter = educationSector != null ?
                new ObjectParameter("EducationSector", educationSector) :
                new ObjectParameter("EducationSector", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Experience_Update", idParameter, companyNameParameter, dateFromParameter, dateToParameter, currentPositionParameter, educationSectorParameter, usernameParameter, message);
        }
    
        public virtual ObjectResult<up_Get_Phases_Result> up_Get_Phases(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Get_Phases_Result>("up_Get_Phases", idParameter, nameParameter);
        }
    
        public virtual int Up_GetID_FromASPUsers(string userName, string idNumber, Nullable<int> persalNumber, string name, string surname, string gender, Nullable<System.DateTime> dateOfBirth, Nullable<int> positionId)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var persalNumberParameter = persalNumber.HasValue ?
                new ObjectParameter("PersalNumber", persalNumber) :
                new ObjectParameter("PersalNumber", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Up_GetID_FromASPUsers", userNameParameter, idNumberParameter, persalNumberParameter, nameParameter, surnameParameter, genderParameter, dateOfBirthParameter, positionIdParameter);
        }
    
        public virtual ObjectResult<Up_GetID_FromUsers_Result> Up_GetID_FromUsers(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Up_GetID_FromUsers_Result>("Up_GetID_FromUsers", idNumberParameter);
        }
    
        public virtual int Up_Insert_RoleID(string roleId, string idNumber)
        {
            var roleIdParameter = roleId != null ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(string));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Up_Insert_RoleID", roleIdParameter, idNumberParameter);
        }
    
        public virtual ObjectResult<up_Level_ByNothing_Result> up_Level_ByNothing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Level_ByNothing_Result>("up_Level_ByNothing");
        }
    
        public virtual ObjectResult<up_LevelType_ByLevelId_Result> up_LevelType_ByLevelId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_LevelType_ByLevelId_Result>("up_LevelType_ByLevelId", idParameter);
        }
    
        public virtual int up_Positions_ByLevelIdByLevelTypeId(Nullable<int> levelId, Nullable<int> levelTypeId)
        {
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(int));
    
            var levelTypeIdParameter = levelTypeId.HasValue ?
                new ObjectParameter("LevelTypeId", levelTypeId) :
                new ObjectParameter("LevelTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Positions_ByLevelIdByLevelTypeId", levelIdParameter, levelTypeIdParameter);
        }
    
        public virtual ObjectResult<up_Positions_ByLevelTypeId_Result> up_Positions_ByLevelTypeId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Positions_ByLevelTypeId_Result>("up_Positions_ByLevelTypeId", idParameter);
        }
    
        public virtual ObjectResult<up_Qaulification_ById_Result> up_Qaulification_ById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Qaulification_ById_Result>("up_Qaulification_ById", idParameter);
        }
    
        public virtual ObjectResult<up_Qaulification_ByTraineeId_Result> up_Qaulification_ByTraineeId(Nullable<int> traineeId)
        {
            var traineeIdParameter = traineeId.HasValue ?
                new ObjectParameter("TraineeId", traineeId) :
                new ObjectParameter("TraineeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Qaulification_ByTraineeId_Result>("up_Qaulification_ByTraineeId", traineeIdParameter);
        }
    
        public virtual int up_Qualification_Delete(Nullable<int> id, string username, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Qualification_Delete", idParameter, usernameParameter, message);
        }
    
        public virtual int up_Qualification_Insert(Nullable<int> traineeID, Nullable<int> highestQualificationId, string otherQualification, Nullable<short> yearCompleted, Nullable<int> institutionId, string otherInstitution, string username, ObjectParameter message)
        {
            var traineeIDParameter = traineeID.HasValue ?
                new ObjectParameter("TraineeID", traineeID) :
                new ObjectParameter("TraineeID", typeof(int));
    
            var highestQualificationIdParameter = highestQualificationId.HasValue ?
                new ObjectParameter("HighestQualificationId", highestQualificationId) :
                new ObjectParameter("HighestQualificationId", typeof(int));
    
            var otherQualificationParameter = otherQualification != null ?
                new ObjectParameter("OtherQualification", otherQualification) :
                new ObjectParameter("OtherQualification", typeof(string));
    
            var yearCompletedParameter = yearCompleted.HasValue ?
                new ObjectParameter("YearCompleted", yearCompleted) :
                new ObjectParameter("YearCompleted", typeof(short));
    
            var institutionIdParameter = institutionId.HasValue ?
                new ObjectParameter("InstitutionId", institutionId) :
                new ObjectParameter("InstitutionId", typeof(int));
    
            var otherInstitutionParameter = otherInstitution != null ?
                new ObjectParameter("OtherInstitution", otherInstitution) :
                new ObjectParameter("OtherInstitution", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Qualification_Insert", traineeIDParameter, highestQualificationIdParameter, otherQualificationParameter, yearCompletedParameter, institutionIdParameter, otherInstitutionParameter, usernameParameter, message);
        }
    
        public virtual int up_Qualification_Update(Nullable<int> id, Nullable<int> highestQualificationId, string otherQualification, Nullable<short> yearCompleted, Nullable<int> institutionId, string otherInstitution, string username, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var highestQualificationIdParameter = highestQualificationId.HasValue ?
                new ObjectParameter("HighestQualificationId", highestQualificationId) :
                new ObjectParameter("HighestQualificationId", typeof(int));
    
            var otherQualificationParameter = otherQualification != null ?
                new ObjectParameter("OtherQualification", otherQualification) :
                new ObjectParameter("OtherQualification", typeof(string));
    
            var yearCompletedParameter = yearCompleted.HasValue ?
                new ObjectParameter("YearCompleted", yearCompleted) :
                new ObjectParameter("YearCompleted", typeof(short));
    
            var institutionIdParameter = institutionId.HasValue ?
                new ObjectParameter("InstitutionId", institutionId) :
                new ObjectParameter("InstitutionId", typeof(int));
    
            var otherInstitutionParameter = otherInstitution != null ?
                new ObjectParameter("OtherInstitution", otherInstitution) :
                new ObjectParameter("OtherInstitution", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Qualification_Update", idParameter, highestQualificationIdParameter, otherQualificationParameter, yearCompletedParameter, institutionIdParameter, otherInstitutionParameter, usernameParameter, message);
        }
    
        public virtual ObjectResult<Nullable<short>> up_ResetPassword_BYUserIdAndCode(string userId, Nullable<int> code)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("up_ResetPassword_BYUserIdAndCode", userIdParameter, codeParameter);
        }
    
        public virtual int up_ResetPassword_Insert(string userId, Nullable<int> code, ObjectParameter message)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_ResetPassword_Insert", userIdParameter, codeParameter, message);
        }
    
        public virtual int up_ResetPassword_Update(string userId, Nullable<int> code, ObjectParameter message)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_ResetPassword_Update", userIdParameter, codeParameter, message);
        }
    
        public virtual int up_Template(ObjectParameter message)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Template", message);
        }
    
        public virtual ObjectResult<up_Trainee_ByEnrolId_Result> up_Trainee_ByEnrolId(Nullable<int> enrollId)
        {
            var enrollIdParameter = enrollId.HasValue ?
                new ObjectParameter("EnrollId", enrollId) :
                new ObjectParameter("EnrollId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Trainee_ByEnrolId_Result>("up_Trainee_ByEnrolId", enrollIdParameter);
        }
    
        public virtual ObjectResult<up_Trainee_ByIdNumber_Result> up_Trainee_ByIdNumber(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Trainee_ByIdNumber_Result>("up_Trainee_ByIdNumber", idNumberParameter);
        }
    
        public virtual ObjectResult<up_Trainee_BySchoolId_Result> up_Trainee_BySchoolId(Nullable<int> schoolId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Trainee_BySchoolId_Result>("up_Trainee_BySchoolId", schoolIdParameter);
        }
    
        public virtual int up_Trainee_Insert(string userName, string idNumber, Nullable<int> persalNumber, Nullable<int> title, string initials, string name, string surname, string gender, string dateOfBirth, Nullable<int> positionId, Nullable<int> language, string cellPhoneNumber, string telephoneNumber, Nullable<int> sACENumber, Nullable<int> age, Nullable<int> nationality, Nullable<int> disability, Nullable<int> disabilityType, Nullable<int> race, string emailAddress, ObjectParameter message)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var persalNumberParameter = persalNumber.HasValue ?
                new ObjectParameter("PersalNumber", persalNumber) :
                new ObjectParameter("PersalNumber", typeof(int));
    
            var titleParameter = title.HasValue ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(int));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("Initials", initials) :
                new ObjectParameter("Initials", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            var cellPhoneNumberParameter = cellPhoneNumber != null ?
                new ObjectParameter("CellPhoneNumber", cellPhoneNumber) :
                new ObjectParameter("CellPhoneNumber", typeof(string));
    
            var telephoneNumberParameter = telephoneNumber != null ?
                new ObjectParameter("TelephoneNumber", telephoneNumber) :
                new ObjectParameter("TelephoneNumber", typeof(string));
    
            var sACENumberParameter = sACENumber.HasValue ?
                new ObjectParameter("SACENumber", sACENumber) :
                new ObjectParameter("SACENumber", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(int));
    
            var disabilityParameter = disability.HasValue ?
                new ObjectParameter("Disability", disability) :
                new ObjectParameter("Disability", typeof(int));
    
            var disabilityTypeParameter = disabilityType.HasValue ?
                new ObjectParameter("DisabilityType", disabilityType) :
                new ObjectParameter("DisabilityType", typeof(int));
    
            var raceParameter = race.HasValue ?
                new ObjectParameter("Race", race) :
                new ObjectParameter("Race", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Trainee_Insert", userNameParameter, idNumberParameter, persalNumberParameter, titleParameter, initialsParameter, nameParameter, surnameParameter, genderParameter, dateOfBirthParameter, positionIdParameter, languageParameter, cellPhoneNumberParameter, telephoneNumberParameter, sACENumberParameter, ageParameter, nationalityParameter, disabilityParameter, disabilityTypeParameter, raceParameter, emailAddressParameter, message);
        }
    
        public virtual int up_Trainee_Update(string userName, string idNumber, Nullable<int> title, string initials, string name, string surname, string gender, string dateOfBirth, Nullable<int> positionId, Nullable<int> language, string cellPhoneNumber, string telephoneNumber, Nullable<int> sACENumber, Nullable<int> age, Nullable<int> nationality, Nullable<int> disability, Nullable<int> disabilityType, Nullable<int> race, ObjectParameter message)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var titleParameter = title.HasValue ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(int));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("Initials", initials) :
                new ObjectParameter("Initials", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth != null ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(string));
    
            var positionIdParameter = positionId.HasValue ?
                new ObjectParameter("PositionId", positionId) :
                new ObjectParameter("PositionId", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            var cellPhoneNumberParameter = cellPhoneNumber != null ?
                new ObjectParameter("CellPhoneNumber", cellPhoneNumber) :
                new ObjectParameter("CellPhoneNumber", typeof(string));
    
            var telephoneNumberParameter = telephoneNumber != null ?
                new ObjectParameter("TelephoneNumber", telephoneNumber) :
                new ObjectParameter("TelephoneNumber", typeof(string));
    
            var sACENumberParameter = sACENumber.HasValue ?
                new ObjectParameter("SACENumber", sACENumber) :
                new ObjectParameter("SACENumber", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(int));
    
            var disabilityParameter = disability.HasValue ?
                new ObjectParameter("Disability", disability) :
                new ObjectParameter("Disability", typeof(int));
    
            var disabilityTypeParameter = disabilityType.HasValue ?
                new ObjectParameter("DisabilityType", disabilityType) :
                new ObjectParameter("DisabilityType", typeof(int));
    
            var raceParameter = race.HasValue ?
                new ObjectParameter("Race", race) :
                new ObjectParameter("Race", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Trainee_Update", userNameParameter, idNumberParameter, titleParameter, initialsParameter, nameParameter, surnameParameter, genderParameter, dateOfBirthParameter, positionIdParameter, languageParameter, cellPhoneNumberParameter, telephoneNumberParameter, sACENumberParameter, ageParameter, nationalityParameter, disabilityParameter, disabilityTypeParameter, raceParameter, message);
        }
    
        public virtual ObjectResult<up_Trainees_ByPrincipalIdNumber_Result> up_Trainees_ByPrincipalIdNumber(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Trainees_ByPrincipalIdNumber_Result>("up_Trainees_ByPrincipalIdNumber", idNumberParameter);
        }
    
        public virtual int up_Training_ByUserName(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Training_ByUserName", usernameParameter);
        }
    
        public virtual ObjectResult<up_TrainingAwaitingApproval_ByApproverIdNumberAndId_Result> up_TrainingAwaitingApproval_ByApproverIdNumberAndId(Nullable<int> id, string idNumber)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingAwaitingApproval_ByApproverIdNumberAndId_Result>("up_TrainingAwaitingApproval_ByApproverIdNumberAndId", idParameter, idNumberParameter);
        }
    
        public virtual int up_TrainingAwaitingApproval_ById(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_TrainingAwaitingApproval_ById", idNumberParameter);
        }
    
        public virtual ObjectResult<up_TrainingAwaitingApproval_ByIdNumber_Result> up_TrainingAwaitingApproval_ByIdNumber(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingAwaitingApproval_ByIdNumber_Result>("up_TrainingAwaitingApproval_ByIdNumber", idNumberParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ById_Result> up_TrainingSchedule_ById(Nullable<int> trainingId, Nullable<int> scheduleId)
        {
            var trainingIdParameter = trainingId.HasValue ?
                new ObjectParameter("TrainingId", trainingId) :
                new ObjectParameter("TrainingId", typeof(int));
    
            var scheduleIdParameter = scheduleId.HasValue ?
                new ObjectParameter("ScheduleId", scheduleId) :
                new ObjectParameter("ScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ById_Result>("up_TrainingSchedule_ById", trainingIdParameter, scheduleIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ById1_Result> up_TrainingSchedule_ById1(Nullable<int> trainingId, Nullable<int> scheduleId)
        {
            var trainingIdParameter = trainingId.HasValue ?
                new ObjectParameter("TrainingId", trainingId) :
                new ObjectParameter("TrainingId", typeof(int));
    
            var scheduleIdParameter = scheduleId.HasValue ?
                new ObjectParameter("ScheduleId", scheduleId) :
                new ObjectParameter("ScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ById1_Result>("up_TrainingSchedule_ById1", trainingIdParameter, scheduleIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByInstructorId_Result> up_TrainingSchedule_ByInstructorId(string instructorId)
        {
            var instructorIdParameter = instructorId != null ?
                new ObjectParameter("InstructorId", instructorId) :
                new ObjectParameter("InstructorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByInstructorId_Result>("up_TrainingSchedule_ByInstructorId", instructorIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByInstructorIdAndScheduleId_Result> up_TrainingSchedule_ByInstructorIdAndScheduleId(string intructorId)
        {
            var intructorIdParameter = intructorId != null ?
                new ObjectParameter("IntructorId", intructorId) :
                new ObjectParameter("IntructorId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByInstructorIdAndScheduleId_Result>("up_TrainingSchedule_ByInstructorIdAndScheduleId", intructorIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByNothing1_Result> up_TrainingSchedule_ByNothing1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByNothing1_Result>("up_TrainingSchedule_ByNothing1");
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByNothing2_Result> up_TrainingSchedule_ByNothing2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByNothing2_Result>("up_TrainingSchedule_ByNothing2");
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByScheduleId_Result> up_TrainingSchedule_ByScheduleId(string scheduleId)
        {
            var scheduleIdParameter = scheduleId != null ?
                new ObjectParameter("ScheduleId", scheduleId) :
                new ObjectParameter("ScheduleId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByScheduleId_Result>("up_TrainingSchedule_ByScheduleId", scheduleIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByTopicId_Result> up_TrainingSchedule_ByTopicId(Nullable<int> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByTopicId_Result>("up_TrainingSchedule_ByTopicId", topicIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByTopicId1_Result> up_TrainingSchedule_ByTopicId1(Nullable<int> topicId)
        {
            var topicIdParameter = topicId.HasValue ?
                new ObjectParameter("TopicId", topicId) :
                new ObjectParameter("TopicId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByTopicId1_Result>("up_TrainingSchedule_ByTopicId1", topicIdParameter);
        }
    
        public virtual ObjectResult<up_TrainingSchedule_ByTrainingIdAndScheduleId_Result> up_TrainingSchedule_ByTrainingIdAndScheduleId(Nullable<int> trainingId, Nullable<int> scheduleId)
        {
            var trainingIdParameter = trainingId.HasValue ?
                new ObjectParameter("TrainingId", trainingId) :
                new ObjectParameter("TrainingId", typeof(int));
    
            var scheduleIdParameter = scheduleId.HasValue ?
                new ObjectParameter("ScheduleId", scheduleId) :
                new ObjectParameter("ScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_TrainingSchedule_ByTrainingIdAndScheduleId_Result>("up_TrainingSchedule_ByTrainingIdAndScheduleId", trainingIdParameter, scheduleIdParameter);
        }
    
        public virtual ObjectResult<up_User_ById_Result> up_User_ById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_User_ById_Result>("up_User_ById", idParameter);
        }
    
        public virtual ObjectResult<up_User_ByIdNumber_Result> up_User_ByIdNumber(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_User_ByIdNumber_Result>("up_User_ByIdNumber", idNumberParameter);
        }
    
        public virtual ObjectResult<up_User_ByNothing_Result> up_User_ByNothing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_User_ByNothing_Result>("up_User_ByNothing");
        }
    
        public virtual ObjectResult<up_User_ByPerIDNo_Result> up_User_ByPerIDNo(string iDNUMBER)
        {
            var iDNUMBERParameter = iDNUMBER != null ?
                new ObjectParameter("IDNUMBER", iDNUMBER) :
                new ObjectParameter("IDNUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_User_ByPerIDNo_Result>("up_User_ByPerIDNo", iDNUMBERParameter);
        }
    
        public virtual int up_User_Delete(Nullable<int> id, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_User_Delete", idParameter, message);
        }
    
        public virtual int up_User_Insert(string idNumber, string persalNumber, string initials, Nullable<int> title, string telephoneNumber, string name, string surname, string gender, string emailAddress, string cellPhoneNumber, Nullable<int> nationality, Nullable<int> language, Nullable<int> race, Nullable<int> disability, Nullable<int> disabilityType, string createdById, string userId, Nullable<short> levelId, Nullable<int> districtId, Nullable<int> schoolId, ObjectParameter message)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var persalNumberParameter = persalNumber != null ?
                new ObjectParameter("PersalNumber", persalNumber) :
                new ObjectParameter("PersalNumber", typeof(string));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("Initials", initials) :
                new ObjectParameter("Initials", typeof(string));
    
            var titleParameter = title.HasValue ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(int));
    
            var telephoneNumberParameter = telephoneNumber != null ?
                new ObjectParameter("TelephoneNumber", telephoneNumber) :
                new ObjectParameter("TelephoneNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var cellPhoneNumberParameter = cellPhoneNumber != null ?
                new ObjectParameter("CellPhoneNumber", cellPhoneNumber) :
                new ObjectParameter("CellPhoneNumber", typeof(string));
    
            var nationalityParameter = nationality.HasValue ?
                new ObjectParameter("Nationality", nationality) :
                new ObjectParameter("Nationality", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            var raceParameter = race.HasValue ?
                new ObjectParameter("Race", race) :
                new ObjectParameter("Race", typeof(int));
    
            var disabilityParameter = disability.HasValue ?
                new ObjectParameter("Disability", disability) :
                new ObjectParameter("Disability", typeof(int));
    
            var disabilityTypeParameter = disabilityType.HasValue ?
                new ObjectParameter("DisabilityType", disabilityType) :
                new ObjectParameter("DisabilityType", typeof(int));
    
            var createdByIdParameter = createdById != null ?
                new ObjectParameter("CreatedById", createdById) :
                new ObjectParameter("CreatedById", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(short));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_User_Insert", idNumberParameter, persalNumberParameter, initialsParameter, titleParameter, telephoneNumberParameter, nameParameter, surnameParameter, genderParameter, emailAddressParameter, cellPhoneNumberParameter, nationalityParameter, languageParameter, raceParameter, disabilityParameter, disabilityTypeParameter, createdByIdParameter, userIdParameter, levelIdParameter, districtIdParameter, schoolIdParameter, message);
        }
    
        public virtual int up_User_Update(Nullable<int> id, string idNumber, string persalNumber, string initials, Nullable<int> title, string telephoneNumber, string name, string surname, string gender, string emailAddress, string cellPhoneNumber, Nullable<short> levelId, string userId, Nullable<int> districtId, Nullable<int> schoolId, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var persalNumberParameter = persalNumber != null ?
                new ObjectParameter("PersalNumber", persalNumber) :
                new ObjectParameter("PersalNumber", typeof(string));
    
            var initialsParameter = initials != null ?
                new ObjectParameter("Initials", initials) :
                new ObjectParameter("Initials", typeof(string));
    
            var titleParameter = title.HasValue ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(int));
    
            var telephoneNumberParameter = telephoneNumber != null ?
                new ObjectParameter("TelephoneNumber", telephoneNumber) :
                new ObjectParameter("TelephoneNumber", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var cellPhoneNumberParameter = cellPhoneNumber != null ?
                new ObjectParameter("CellPhoneNumber", cellPhoneNumber) :
                new ObjectParameter("CellPhoneNumber", typeof(string));
    
            var levelIdParameter = levelId.HasValue ?
                new ObjectParameter("LevelId", levelId) :
                new ObjectParameter("LevelId", typeof(short));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_User_Update", idParameter, idNumberParameter, persalNumberParameter, initialsParameter, titleParameter, telephoneNumberParameter, nameParameter, surnameParameter, genderParameter, emailAddressParameter, cellPhoneNumberParameter, levelIdParameter, userIdParameter, districtIdParameter, schoolIdParameter, message);
        }
    
        public virtual int up_UserTraining_ApproveById(Nullable<int> id, string userId, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_UserTraining_ApproveById", idParameter, userIdParameter, message);
        }
    
        public virtual ObjectResult<up_UserTraining_ByIdNumber_Result> up_UserTraining_ByIdNumber(string idNumber)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_UserTraining_ByIdNumber_Result>("up_UserTraining_ByIdNumber", idNumberParameter);
        }
    
        public virtual int up_UserTraining_ByIdNumberAndRelatedToId(string idNumber, Nullable<int> relatedTo)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var relatedToParameter = relatedTo.HasValue ?
                new ObjectParameter("RelatedTo", relatedTo) :
                new ObjectParameter("RelatedTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_UserTraining_ByIdNumberAndRelatedToId", idNumberParameter, relatedToParameter);
        }
    
        public virtual ObjectResult<up_UserTraining_ByIdNumberAndSchuduleId_Result> up_UserTraining_ByIdNumberAndSchuduleId(Nullable<int> id, string idNumber)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_UserTraining_ByIdNumberAndSchuduleId_Result>("up_UserTraining_ByIdNumberAndSchuduleId", idParameter, idNumberParameter);
        }
    
        public virtual ObjectResult<up_UserTraining_ByNumberAndRelatedToId_Result> up_UserTraining_ByNumberAndRelatedToId(string idNumber, Nullable<int> relatedTo)
        {
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var relatedToParameter = relatedTo.HasValue ?
                new ObjectParameter("RelatedTo", relatedTo) :
                new ObjectParameter("RelatedTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_UserTraining_ByNumberAndRelatedToId_Result>("up_UserTraining_ByNumberAndRelatedToId", idNumberParameter, relatedToParameter);
        }
    
        public virtual ObjectResult<up_UserTraining_Cancel_ByEnrollId_Result> up_UserTraining_Cancel_ByEnrollId(Nullable<int> id, string lastUpdatedBy)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_UserTraining_Cancel_ByEnrollId_Result>("up_UserTraining_Cancel_ByEnrollId", idParameter, lastUpdatedByParameter);
        }
    
        public virtual int up_UserTraining_CancelByIdNumberAndSchuduleId(Nullable<int> id, string idNumber, string userId, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("IdNumber", idNumber) :
                new ObjectParameter("IdNumber", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_UserTraining_CancelByIdNumberAndSchuduleId", idParameter, idNumberParameter, userIdParameter, message);
        }
    
        public virtual int up_UserTraining_RejectById(Nullable<int> id, string userId, ObjectParameter message)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_UserTraining_RejectById", idParameter, userIdParameter, message);
        }
    
        public virtual ObjectResult<up_Level_ByNothing1_Result> up_Level_ByNothing1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Level_ByNothing1_Result>("up_Level_ByNothing1");
        }
    
        public virtual int up_LookupByTableName(string table)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_LookupByTableName", tableParameter);
        }
    }
}
